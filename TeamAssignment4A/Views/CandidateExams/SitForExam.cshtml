@model IEnumerable<TeamAssignment4A.Models.JointTables.CandidateExam>

@{
    ViewData["Title"] = "SitForExam";
}

<h3 class="custom-font fadein center-adjust">Examination</h3>
<div class="sticky-header go-to-top hide-on-load text-nowrap my-round-button text-center navbar-dark bg-info"
    onclick="scrollToTop()">
    Go to top
</div>
<hr />

<div class="row custom-font fadein center-adjust">
    <form asp-action="SubmitExam" class="col-sm-2 text-center">
        
        @{int i = 0;}
        
        @foreach (var item in Model)
        {
            <div>
                <input type="hidden" asp-for="@item.Id" />
                @*@Html.HiddenFor(modelItem => item.Stem.Id)
                @Html.HiddenFor(modelItem => item.Exam.Id)*@
                <div class="text-nowrap text-center navbar-dark bg-primary" style="border-top-right-radius: 100px; 
                                            border-bottom-right-radius: 100px; border-top-left-radius: 100px; 
                                            border-bottom-left-radius: 100px">
                    @Html.DisplayNameFor(modelItem => item.Exam.ExamStems.ToList()[i].Stem.Question)
                    <br>
                    @Html.Raw(item.Exam.ExamStems.ToList()[i].Stem.Question)
                    <input type="hidden" asp-for="@item.Exam.ExamStems.ToList()[i].Stem.Question" />
                    @*@Html.HiddenFor(modelItem => item.ExamStem.Stem.Question)*@
                </div> <br />
                <div class="text-nowrap text-center" style="border-top-right-radius: 100px; 
                                            border-bottom-right-radius: 100px; border-top-left-radius: 100px; 
                                            border-bottom-left-radius: 100px">
                    @Html.DisplayNameFor(modelItem => item.Exam.ExamStems.ToList()[i].Stem.OptionA)
                    <br>
                    @Html.Raw(item.Exam.ExamStems.ToList()[i].Stem.OptionA)
                    <input type="hidden" asp-for="@item.Exam.ExamStems.ToList()[i].Stem.OptionA" />
                    @*@Html.HiddenFor(modelItem => item.ExamStem.Stem.OptionA)*@
                </div> <br />
                <div class="text-nowrap text-center" style="border-top-right-radius: 100px; 
                                            border-bottom-right-radius: 100px; border-top-left-radius: 100px; 
                                            border-bottom-left-radius: 100px">
                    @Html.DisplayNameFor(modelItem => item.Exam.ExamStems.ToList()[i].Stem.OptionB)
                    <br>
                    @Html.Raw(item.Exam.ExamStems.ToList()[i].Stem.OptionB)
                    <input type="hidden" asp-for="@item.Exam.ExamStems.ToList()[i].Stem.OptionB" />
                    @*@Html.HiddenFor(modelItem => item.ExamStem.Stem.OptionB)*@
                </div> <br />
                <div class="text-nowrap text-center" style="border-top-right-radius: 100px; 
                                            border-bottom-right-radius: 100px; border-top-left-radius: 100px; 
                                            border-bottom-left-radius: 100px">
                    @Html.DisplayNameFor(modelItem => item.Exam.ExamStems.ToList()[i].Stem.OptionC)
                    <br>
                    @Html.Raw(item.Exam.ExamStems.ToList()[i].Stem.OptionC)
                    <input type="hidden" asp-for="@item.Exam.ExamStems.ToList()[i].Stem.OptionC" />
                    @*@Html.HiddenFor(modelItem => item.ExamStem.Stem.OptionC)*@
                </div> <br />
                <div class="text-nowrap text-center" style="border-top-right-radius: 100px; 
                                            border-bottom-right-radius: 100px; border-top-left-radius: 100px; 
                                            border-bottom-left-radius: 100px">
                    @Html.DisplayNameFor(modelItem => item.Exam.ExamStems.ToList()[i].Stem.OptionD)
                    <br>
                    @Html.Raw(item.Exam.ExamStems.ToList()[i].Stem.OptionD)
                    <input type="hidden" asp-for="@item.Exam.ExamStems.ToList()[i].Stem.OptionD" />
                    @*@Html.HiddenFor(modelItem => item.ExamStem.Stem.OptionD)*@
                </div> <br />
                <div class="form-group" style="text-decoration: underline;" >
                    <label asp-for="@item.CandidateExamStems.ToList()[i].SubmittedAnswer" class="control-label"></label> <br /> 
                    <select asp-for="@item.CandidateExamStems.ToList()[i].SubmittedAnswer" class="form-control" asp-items="@ViewBag.Selections"></select>
                    <span asp-validation-for="@item.CandidateExamStems.ToList()[i].SubmittedAnswer" class="text-danger"></span>
                </div>                
            </div>
            i++;
        }
        <input type="submit" value="Submit" class="btn btn-warning" />
    </form>
</div>

@section Scripts {
    @{
        <script src="~/lib/jquery/dist/jquery.min.js"></script>
        <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
        <script src="~/js/site.js" asp-append-version="true"></script>
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


